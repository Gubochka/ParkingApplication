// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ParkingApplication.DAL.Context;

#nullable disable

namespace ParkingApplication.DAL.Migrations
{
    [DbContext(typeof(DataBaseContext))]
    partial class DataBaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ParkingApplication.DAL.Entities.Admin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsSuperAdmin")
                        .HasColumnType("boolean");

                    b.Property<int?>("ParkingTemplateId")
                        .HasColumnType("integer");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.HasIndex("ParkingTemplateId");

                    b.ToTable("Admins");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "superadmin.parking@gmail.com",
                            IsSuperAdmin = true,
                            Password = "0AR815h3QMT0LWCVa2W/ulXWdACkk9OmlFpDQAd277X3cw7L"
                        });
                });

            modelBuilder.Entity("ParkingApplication.DAL.Entities.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CarName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CarNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("OwnerId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("ParkingApplication.DAL.Entities.Owner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.ToTable("Owners");
                });

            modelBuilder.Entity("ParkingApplication.DAL.Entities.Parking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CarId")
                        .HasColumnType("integer");

                    b.Property<int>("FloorNumber")
                        .HasColumnType("integer");

                    b.Property<int>("ParkingTemplateId")
                        .HasColumnType("integer");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<int>("SlotNumber")
                        .HasColumnType("integer");

                    b.Property<DateTime>("StandsUntil")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("CarId");

                    b.HasIndex("Id");

                    b.HasIndex("ParkingTemplateId");

                    b.ToTable("Parking");
                });

            modelBuilder.Entity("ParkingApplication.DAL.Entities.ParkingTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("FloorsCount")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<int>("SlotsCount")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.ToTable("ParkingTemplates");
                });

            modelBuilder.Entity("ParkingApplication.DAL.Entities.Admin", b =>
                {
                    b.HasOne("ParkingApplication.DAL.Entities.ParkingTemplate", "ParkingTemplate")
                        .WithMany("Admins")
                        .HasForeignKey("ParkingTemplateId");

                    b.Navigation("ParkingTemplate");
                });

            modelBuilder.Entity("ParkingApplication.DAL.Entities.Car", b =>
                {
                    b.HasOne("ParkingApplication.DAL.Entities.Owner", "Owner")
                        .WithMany("Cars")
                        .HasForeignKey("OwnerId")
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("ParkingApplication.DAL.Entities.Parking", b =>
                {
                    b.HasOne("ParkingApplication.DAL.Entities.Car", "Car")
                        .WithMany("Parking")
                        .HasForeignKey("CarId")
                        .IsRequired();

                    b.HasOne("ParkingApplication.DAL.Entities.ParkingTemplate", "ParkingTemplate")
                        .WithMany("Parkings")
                        .HasForeignKey("ParkingTemplateId")
                        .IsRequired();

                    b.Navigation("Car");

                    b.Navigation("ParkingTemplate");
                });

            modelBuilder.Entity("ParkingApplication.DAL.Entities.Car", b =>
                {
                    b.Navigation("Parking");
                });

            modelBuilder.Entity("ParkingApplication.DAL.Entities.Owner", b =>
                {
                    b.Navigation("Cars");
                });

            modelBuilder.Entity("ParkingApplication.DAL.Entities.ParkingTemplate", b =>
                {
                    b.Navigation("Admins");

                    b.Navigation("Parkings");
                });
#pragma warning restore 612, 618
        }
    }
}
